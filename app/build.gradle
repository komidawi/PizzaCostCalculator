apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.github.komidawi.pizzacostcalculator"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 1
        versionName "0.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions.annotationProcessorOptions.arguments += ["room.incremental": "true"]
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        String sharedTestDir = 'src/sharedTest/java'
        test {
            java.srcDir sharedTestDir
        }
        androidTest {
            java.srcDir sharedTestDir
        }
    }

    buildFeatures {
        viewBinding = true
        dataBinding = true
    }

    // Add support for Java 8 language features
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    // To get rid of "More than one file was found with OS independent path" errors
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
        exclude 'win32-x86-64/attach_hotspot_windows.dll'
        exclude 'win32-x86/attach_hotspot_windows.dll'
        exclude 'META-INF/licenses/ASM'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])


    /// Kotlin standard library
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'androidx.core:core-ktx:1.3.2'
    implementation "androidx.legacy:legacy-support-v4:$androidXLegacySupport"

    /// Android UI and appcompat
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayoutVersion"

    /// For Navigation, NavFragments, NavHostControllers etc.
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_ktx_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_ktx_version"

    /// Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

    /// Network
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    /// Persistence
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    /// Lifecycle Extensions
    // ViewModel, CoroutineScope, viewModelScope
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    // Annotation processor
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    /// Testing
    // Dependencies for local unit tests
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"
    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    // Contains testing code for more advanced views, such as DatePicker and RecyclerView
    testImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    testImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    testImplementation "com.google.truth:truth:$truthVersion"

    // AndroidX Test - JVM testing
    testImplementation "androidx.test:core:$androidXTestCoreVersion"
    testImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
    testImplementation "androidx.test.ext:junit:$androidXTestExtKotlinRunnerVersion"
    testImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
    testImplementation "androidx.test:rules:$androidXTestRulesVersion"
    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"
    debugImplementation "androidx.fragment:fragment-testing:$fragmentVersion"
    implementation "androidx.test:core:$androidXTestCoreVersion"
    implementation "androidx.fragment:fragment:$fragmentVersion"

    // Dependencies for Android unit tests
    androidTestImplementation "junit:junit:$junitVersion"
    androidTestImplementation "org.mockito:mockito-core:$mockitoVersion"
    // Enables Mockito to generate objects during runtime on Android
    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:$dexMakerVersion"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"

    // AndroidX Test - Instrumented testing
    androidTestImplementation "androidx.test:core:$androidXTestCoreVersion"
    androidTestImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidXTestExtKotlinRunnerVersion"
    androidTestImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
    androidTestImplementation "androidx.test:rules:$androidXTestRulesVersion"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$archTestingVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    // Contains testing code for more advanced views, such as DatePicker and RecyclerView
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    // To properly handle writing E2E tests that involve both long running operations and the data binding library.
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$espressoVersion"
    // The following Espresso dependency can be either "implementation"or "androidTestImplementation",
    // depending on whether you want the dependency
    // to appear on your APK's compile classpath or the test APK classpath.
    androidTestImplementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"
    androidTestImplementation "org.robolectric:annotations:$robolectricVersion"

    // Resolve conflicts between main and test APK:
    androidTestImplementation "androidx.annotation:annotation:$androidXAnnotations"
    androidTestImplementation "androidx.legacy:legacy-support-v4:$androidXLegacySupport"
    androidTestImplementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    androidTestImplementation "androidx.appcompat:appcompat:$appCompatVersion"
    androidTestImplementation "com.google.android.material:material:$materialVersion"
}
